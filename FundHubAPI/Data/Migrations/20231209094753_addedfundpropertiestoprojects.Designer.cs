// <auto-generated />
using System;
using FundHubAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace FundHubAPI.Data.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20231209094753_addedfundpropertiestoprojects")]
    partial class addedfundpropertiestoprojects
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("FundHubAPI.Data.Models.FundLogs", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("ProjectId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.Property<bool>("accepted")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("datetime")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.HasIndex("UserId");

                    b.ToTable("PurchaseLogs");
                });

            modelBuilder.Entity("FundHubAPI.Data.Models.News", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("description")
                        .HasColumnType("text");

                    b.Property<string>("image")
                        .HasColumnType("text");

                    b.Property<DateOnly?>("published")
                        .HasColumnType("date");

                    b.Property<string>("subtitle")
                        .HasColumnType("text");

                    b.Property<string>("title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("News");

                    b.HasData(
                        new
                        {
                            Id = new Guid("6569b211-2ea3-44ca-9580-972a05c8d82d"),
                            description = "Desc Test",
                            image = "newscover.jpg",
                            published = new DateOnly(2024, 1, 1),
                            title = "Innovative Breakthroughs: College Students Secure Funding for Groundbreaking Projects"
                        },
                        new
                        {
                            Id = new Guid("212d823f-0946-4e71-b484-5b89930fc3f4"),
                            description = "Desc Test",
                            image = "newscover.jpg",
                            published = new DateOnly(2024, 1, 1),
                            title = "Empowering Tomorrow's Leaders: College Projects Receive Major Funding Boost"
                        },
                        new
                        {
                            Id = new Guid("6b6d27b3-832c-4f7d-a818-d6fb598b55ab"),
                            description = "Desc Test",
                            image = "newscover.jpg",
                            published = new DateOnly(2024, 1, 1),
                            title = "From Campus to Capital: Student-Led Ventures Garner Investment for Impactful Initiatives"
                        },
                        new
                        {
                            Id = new Guid("b9699eda-35a8-482c-9416-03a9dd709869"),
                            description = "Desc Test",
                            image = "newscover.jpg",
                            published = new DateOnly(2024, 1, 1),
                            title = "Shaping the Future: College Students' Ambitious Projects Win Substantial Funding"
                        });
                });

            modelBuilder.Entity("FundHubAPI.Data.Models.Project", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.Property<string>("category")
                        .HasColumnType("text");

                    b.Property<int>("currentfund")
                        .HasColumnType("integer");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string[]>("images")
                        .IsRequired()
                        .HasColumnType("text[]");

                    b.Property<string>("subtitle")
                        .HasColumnType("text");

                    b.Property<string>("title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("totalfundrequired")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Projects");

                    b.HasData(
                        new
                        {
                            Id = new Guid("50f86273-8768-43d1-9a02-d74a38397462"),
                            UserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            category = "enviornment",
                            currentfund = 0,
                            description = "Description Test",
                            images = new[] { "1.jpg", "2.jpg" },
                            subtitle = "Subtitle Test",
                            title = "Greener Egypt",
                            totalfundrequired = 0
                        },
                        new
                        {
                            Id = new Guid("5cbe793b-26af-4c5c-9ab7-698ce3a66827"),
                            UserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            category = "health",
                            currentfund = 0,
                            description = "Description Test",
                            images = new[] { "1.jpg", "2.jpg" },
                            subtitle = "Subtitle Test",
                            title = "My Super Awesome Health Machine",
                            totalfundrequired = 0
                        },
                        new
                        {
                            Id = new Guid("3d200ef5-68da-435a-911b-0d5eca0bd7a1"),
                            UserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            category = "enviornment",
                            currentfund = 0,
                            description = "Description Test",
                            images = new[] { "1.jpg", "2.jpg" },
                            subtitle = "Subtitle Test",
                            title = "Electric Koshary Machine",
                            totalfundrequired = 0
                        },
                        new
                        {
                            Id = new Guid("f6c75da3-85bd-48f5-9982-5d0ae33a65d9"),
                            UserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            category = "enviornment",
                            currentfund = 0,
                            description = "Description Test",
                            images = new[] { "1.jpg", "2.jpg" },
                            subtitle = "Subtitle Test",
                            title = "Indie Egyptian Game",
                            totalfundrequired = 0
                        });
                });

            modelBuilder.Entity("FundHubAPI.Data.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("email")
                        .HasColumnType("text");

                    b.Property<string>("hashedpassword")
                        .HasColumnType("text");

                    b.Property<string>("pass_salt")
                        .HasColumnType("text");

                    b.Property<int?>("phonenumber")
                        .HasColumnType("integer");

                    b.Property<string>("username")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("usertype")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("FundHubAPI.Data.Models.FundLogs", b =>
                {
                    b.HasOne("FundHubAPI.Data.Models.Project", "Project")
                        .WithMany()
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FundHubAPI.Data.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Project");

                    b.Navigation("User");
                });
#pragma warning restore 612, 618
        }
    }
}
