// <auto-generated />
using System;
using FundHubAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace FundHubAPI.Data.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20231208195713_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("FundHubAPI.Data.Models.FundLogs", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("ProjectId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.Property<bool>("accepted")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("datetime")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.HasIndex("UserId");

                    b.ToTable("PurchaseLogs");
                });

            modelBuilder.Entity("FundHubAPI.Data.Models.News", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("description")
                        .HasColumnType("text");

                    b.Property<string>("image")
                        .HasColumnType("text");

                    b.Property<DateOnly?>("published")
                        .HasColumnType("date");

                    b.Property<string>("subtitle")
                        .HasColumnType("text");

                    b.Property<string>("title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("News");

                    b.HasData(
                        new
                        {
                            Id = new Guid("d4d58cbf-6150-4e35-ab7f-5fd1017d54dc"),
                            description = "Desc Test",
                            image = "newscover.jpg",
                            published = new DateOnly(2024, 1, 1),
                            title = "News 1"
                        },
                        new
                        {
                            Id = new Guid("a52488df-b28e-408b-b0e2-0f96934c7a5e"),
                            description = "Desc Test",
                            image = "newscover.jpg",
                            published = new DateOnly(2024, 1, 1),
                            title = "News 2"
                        },
                        new
                        {
                            Id = new Guid("23e7841a-637e-4a4f-b781-f52c760b1cef"),
                            description = "Desc Test",
                            image = "newscover.jpg",
                            published = new DateOnly(2024, 1, 1),
                            title = "News 3"
                        });
                });

            modelBuilder.Entity("FundHubAPI.Data.Models.Project", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.Property<string>("category")
                        .HasColumnType("text");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string[]>("images")
                        .IsRequired()
                        .HasColumnType("text[]");

                    b.Property<string>("subtitle")
                        .HasColumnType("text");

                    b.Property<string>("title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Projects");

                    b.HasData(
                        new
                        {
                            Id = new Guid("236a46aa-1cfa-4194-bd50-bbb040707bcf"),
                            UserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            category = "enviornment",
                            description = "Description Test",
                            images = new[] { "1.jpg", "2.jpg" },
                            subtitle = "Subtitle Test",
                            title = "Greener Egypt"
                        },
                        new
                        {
                            Id = new Guid("d77dd7cd-c0f2-47f0-a2ec-fd0a74cd22d2"),
                            UserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            category = "health",
                            description = "Description Test",
                            images = new[] { "1.jpg", "2.jpg" },
                            subtitle = "Subtitle Test",
                            title = "My Super Awesome Health Machine"
                        },
                        new
                        {
                            Id = new Guid("8569e852-027a-4565-b7b9-dcc4228d682d"),
                            UserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            category = "enviornment",
                            description = "Description Test",
                            images = new[] { "1.jpg", "2.jpg" },
                            subtitle = "Subtitle Test",
                            title = ""
                        },
                        new
                        {
                            Id = new Guid("39db0943-282a-44e6-b734-ae308ce80806"),
                            UserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            category = "enviornment",
                            description = "Description Test",
                            images = new[] { "1.jpg", "2.jpg" },
                            subtitle = "Subtitle Test",
                            title = "Greener Egypt"
                        });
                });

            modelBuilder.Entity("FundHubAPI.Data.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("email")
                        .HasColumnType("text");

                    b.Property<string>("hashedpassword")
                        .HasColumnType("text");

                    b.Property<string>("pass_salt")
                        .HasColumnType("text");

                    b.Property<int?>("phonenumber")
                        .HasColumnType("integer");

                    b.Property<string>("username")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("usertype")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("FundHubAPI.Data.Models.FundLogs", b =>
                {
                    b.HasOne("FundHubAPI.Data.Models.Project", "Project")
                        .WithMany()
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FundHubAPI.Data.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Project");

                    b.Navigation("User");
                });
#pragma warning restore 612, 618
        }
    }
}
