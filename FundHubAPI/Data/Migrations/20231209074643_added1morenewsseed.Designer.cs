// <auto-generated />
using System;
using FundHubAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace FundHubAPI.Data.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20231209074643_added1morenewsseed")]
    partial class added1morenewsseed
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("FundHubAPI.Data.Models.FundLogs", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("ProjectId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.Property<bool>("accepted")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("datetime")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.HasIndex("UserId");

                    b.ToTable("PurchaseLogs");
                });

            modelBuilder.Entity("FundHubAPI.Data.Models.News", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("description")
                        .HasColumnType("text");

                    b.Property<string>("image")
                        .HasColumnType("text");

                    b.Property<DateOnly?>("published")
                        .HasColumnType("date");

                    b.Property<string>("subtitle")
                        .HasColumnType("text");

                    b.Property<string>("title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("News");

                    b.HasData(
                        new
                        {
                            Id = new Guid("a1939c78-6cf2-4482-a229-4747bea0bfe0"),
                            description = "Desc Test",
                            image = "newscover.jpg",
                            published = new DateOnly(2024, 1, 1),
                            title = "Innovative Breakthroughs: College Students Secure Funding for Groundbreaking Projects"
                        },
                        new
                        {
                            Id = new Guid("5c1c6efd-a640-4c5c-8772-7c6d4e2afb7b"),
                            description = "Desc Test",
                            image = "newscover.jpg",
                            published = new DateOnly(2024, 1, 1),
                            title = "Empowering Tomorrow's Leaders: College Projects Receive Major Funding Boost"
                        },
                        new
                        {
                            Id = new Guid("ae1ae9f6-91e1-44e2-a05e-e03cbc1bbc68"),
                            description = "Desc Test",
                            image = "newscover.jpg",
                            published = new DateOnly(2024, 1, 1),
                            title = "From Campus to Capital: Student-Led Ventures Garner Investment for Impactful Initiatives"
                        },
                        new
                        {
                            Id = new Guid("1f96537e-eb42-4832-bc41-f27eb8045831"),
                            description = "Desc Test",
                            image = "newscover.jpg",
                            published = new DateOnly(2024, 1, 1),
                            title = "Shaping the Future: College Students' Ambitious Projects Win Substantial Funding"
                        });
                });

            modelBuilder.Entity("FundHubAPI.Data.Models.Project", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.Property<string>("category")
                        .HasColumnType("text");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string[]>("images")
                        .IsRequired()
                        .HasColumnType("text[]");

                    b.Property<string>("subtitle")
                        .HasColumnType("text");

                    b.Property<string>("title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Projects");

                    b.HasData(
                        new
                        {
                            Id = new Guid("b132a8d1-c004-40c5-93ae-af039179b143"),
                            UserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            category = "enviornment",
                            description = "Description Test",
                            images = new[] { "1.jpg", "2.jpg" },
                            subtitle = "Subtitle Test",
                            title = "Greener Egypt"
                        },
                        new
                        {
                            Id = new Guid("190162ec-afeb-4d0b-b2d6-add76b23baab"),
                            UserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            category = "health",
                            description = "Description Test",
                            images = new[] { "1.jpg", "2.jpg" },
                            subtitle = "Subtitle Test",
                            title = "My Super Awesome Health Machine"
                        },
                        new
                        {
                            Id = new Guid("10d24a93-1993-4619-8b55-51b0c4f2908d"),
                            UserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            category = "enviornment",
                            description = "Description Test",
                            images = new[] { "1.jpg", "2.jpg" },
                            subtitle = "Subtitle Test",
                            title = ""
                        },
                        new
                        {
                            Id = new Guid("43b77480-fd96-4d56-a90f-dc630f5edd14"),
                            UserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            category = "enviornment",
                            description = "Description Test",
                            images = new[] { "1.jpg", "2.jpg" },
                            subtitle = "Subtitle Test",
                            title = "Greener Egypt"
                        });
                });

            modelBuilder.Entity("FundHubAPI.Data.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("email")
                        .HasColumnType("text");

                    b.Property<string>("hashedpassword")
                        .HasColumnType("text");

                    b.Property<string>("pass_salt")
                        .HasColumnType("text");

                    b.Property<int?>("phonenumber")
                        .HasColumnType("integer");

                    b.Property<string>("username")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("usertype")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("FundHubAPI.Data.Models.FundLogs", b =>
                {
                    b.HasOne("FundHubAPI.Data.Models.Project", "Project")
                        .WithMany()
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FundHubAPI.Data.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Project");

                    b.Navigation("User");
                });
#pragma warning restore 612, 618
        }
    }
}
